spring:
  application:
    name: gateway-service
  main:
    web-application-type: reactive

  sleuth:
    sampler:
      probability: 1.0
  cloud:
    gateway:
      httpclient:
        response-timeout: 1500ms
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
      routes:
        - id: payment-service
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/payment-service/**
          filters:
            - Retry=6
            - name: CircuitBreaker
              args:
                name: paymentServiceCircuitBreaker
                fallbackUri: forward:/fallback
        - id: passenger-service
          uri: lb://PASSENGER-SERVICE
          predicates:
            - Path=/passenger-service/**
          filters:
            - Retry=6
            - name: CircuitBreaker
              args:
                name: passengerServiceCircuitBreaker
                fallbackUri: forward:/fallback
        - id: driver-service
          uri: lb://DRIVER-SERVICE
          predicates:
            - Path=/driver-service/**
          filters:
            - Retry=6
            - name: CircuitBreaker
              args:
                name: driverServiceCircuitBreaker
                fallbackUri: forward:/fallback
        - id: ride-service
          uri: lb://RIDE-SERVICE
          predicates:
            - Path=/ride-service/**
          filters:
            - Retry=6
            - name: CircuitBreaker
              args:
                name: rideServiceCircuitBreaker
                fallbackUri: forward:/fallback

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  metrics:
    export:
      prometheus:
        enabled: true

  session:
    store-type: redis
  redis:
    host: redis
    port: 6379



logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.circuitbreaker: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG

server:
  forward-headers-strategy: framework
  port: 8086


resilience4j.circuitbreaker:
  configs:
    default:
      timeoutDuration: 3000ms
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 10
      eventConsumerBufferSize: 10
      slowCallDurationThreshold: 200ms
      slowCallRateThreshold: 30
      recordExceptions:
        - java.util.concurrent.TimeoutException
        - org.springframework.cloud.gateway.support.NotFoundException
  instances:
    passengerCircuitBreaker:
      baseConfig: default
    driverCircuitBreaker:
      baseConfig: default
    rideCircuitBreaker:
      baseConfig: default
    paymentCircuitBreaker:
      baseConfig: default


springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false